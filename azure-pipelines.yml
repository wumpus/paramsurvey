trigger:
- main

schedules:
- cron: '42 0 * * 0'
  displayName: 'weekly build'
  branches:
    include:
    - main

jobs:
  - job: linux
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      matrix:
        #Python35noray:
        #  python.version: '3.5'
        #  myenv: ONLY_BUILTINS=1
        # Python 3.6 is not available on ubuntu 22.04 (latest)
        #Python36:
        #  python.version: '3.6'
        Python37:
          python.version: '3.7'
        Python38:
          python.version: '3.8'
        Python38verbose:
          python.version: '3.8'
          myenv: "PARAMSURVEY_VERBOSE=3 PYTEST_STDERR_VISIBLE=-s"
        Python39:
          python.version: '3.9'
        Python310:
          python.version: '3.10'
        Python311:
          python.version: '3.11'
        #Python312:
          # requires allowUnstable
          # as of 3.12.0-alpha.3, no pandas or numpy wheels, pandas build fails after 19 minutes
          #python.version: '3.12-dev'

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
        allowUnstable: true
      displayName: 'Use Python $(python.version)'

    - script: |
        python -m pip install --upgrade pip
        pip install . .[test]
        if [ ! -z "$(myenv)" ]; then
          export $(myenv)
        fi
        if [ -z "$ONLY_BUILTINS" ]; then
          pip install .[ray]
        fi
      displayName: 'Install dependencies'

    - script: |
        if [ ! -z "$(myenv)" ]; then
          export $(myenv)
        fi
        make test_coverage
      displayName: 'pytest'

    - script: |
        pip install coveralls
        export CIRCLE_BRANCH=$BUILD_SOURCEBRANCH
        coveralls
      displayName: 'coveralls'
      env:
        CIRCLECI: 1
        CIRCLE_BUILD_NUM: $(Build.BuildNumber)
        COVERALLS_REPO_TOKEN: $(coveralls_repo_token)

  - job: macos
    pool:
      vmImage: 'macOS-latest'
    strategy:
      matrix:
        Python38noray:
          python.version: '3.8'
          myenv: ONLY_BUILTINS=1

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'

    - script: |
        python -m pip install --upgrade pip
        pip install . .[test]
        if [ ! -z "$(myenv)" ]; then
          export $(myenv)
        fi
        if [ -z "$ONLY_BUILTINS" ]; then
          pip install .[ray]
        fi
      displayName: 'Install dependencies'

    - script: |
        if [ ! -z "$(myenv)" ]; then
          export $(myenv)
        fi
        make test_coverage
      displayName: 'pytest'

    - script: |
        pip install coveralls
        export CIRCLE_BRANCH=$BUILD_SOURCEBRANCH
        coveralls
      displayName: 'coveralls'
      env:
        CIRCLECI: 1
        CIRCLE_BUILD_NUM: $(Build.BuildNumber)
        COVERALLS_REPO_TOKEN: $(coveralls_repo_token)
